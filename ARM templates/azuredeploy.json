{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "_parameterType": "resourceGroup",
        "description": "Name of the resource group for the resource. It is recommended to put resources under same resource group for better tracking."
      }
    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "_parameterType": "location",
        "description": "Location of the resource. By default use resource group's location, unless the resource provider is not supported there."
      }
    }
    ,
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceGroupName'),'-appServicePlan')]",
      "minLength": 2,
      "metadata": {
        "description": "App service name."
      }
    },
    "functionAppServicePlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceGroupName'),'-functionAppServicePlan')]",
      "minLength": 2,
      "metadata": {
        "description": "Function App service plan name."
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceGroupName'),'-webApp', uniqueString(resourceGroup().id))]",
      "minLength": 2,
      "metadata": {
        "description": "Web app name."
      }
    },
    "apiAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceGroupName'),'-apiApp', uniqueString(resourceGroup().id))]",
      "minLength": 2,
      "metadata": {
        "description": "Api app name."
      }
    },
    "stockFunctionAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceGroupName'),'-stockFunctionApp', uniqueString(resourceGroup().id))]",
      "minLength": 2,
      "metadata": {
        "description": "Function app name."
      }
    },
    "deliveryFunctionAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('resourceGroupName'),'-deliveryFunctionApp', uniqueString(resourceGroup().id))]",
      "minLength": 2,
      "metadata": {
        "description": "Function app name."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The SKU of App Service Plan."
      }
    },
    "language": {
      "type": "string",
      "defaultValue": ".net",
      "allowedValues": [
        ".net",
        "php",
        "node",
        "html"
      ],
      "metadata": {
        "description": "The language stack of the app."
      }
    },
    "databaseAccountName": {
      "type": "string",
      "defaultValue": "[format('cosmos-{0}', uniqueString(resourceGroup().name))]",
      "metadata": {
        "description": "Cosmos DB account name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('blob-{0}', uniqueString(resourceGroup().name))]",
      "metadata": {
        "description": "Blob account name"
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name for the Core (SQL) database"
      }
    },
    "storageName": {
      "type": "string",
      "metadata": {
        "description": "The name for the Function storage "
      }
    },
    "containers": {
      "type": "array",
      "metadata": {
        "description": "List of containers in cosmos database"
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server name"
      }
    },
    "sqlServerAdministratorName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Administrator name"
      }
    },
    "sqlServerAdministratorPassword": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Administrator password"
      }
    }
  },
  "variables": {
    "configReference": {
      ".net": {
        "comments": ".Net app. No additional configuration needed."
      },
      "html": {
        "comments": "HTML app. No additional configuration needed."
      },
      "php": {
        "phpVersion": "7.4"
      },
      "node": {
        "appSettings": [
          {
            "name": "WEBSITE_NODE_DEFAULT_VERSION",
            "value": "12.15.0"
          }
        ]
      }
    },
    "databaseAccountName_var": "[concat(toLower(parameters('databaseAccountName')), uniquestring(resourceGroup().id))]",
    "storageAccountName_var": "[concat(toLower(parameters('storageAccountName')), uniquestring(resourceGroup().id))]"
  },
  "resources": [  
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('sqlServerName')]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdministratorName')]",
        "administratorLoginPassword": "[parameters('sqlServerAdministratorPassword')]"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2020-08-01-preview",
          "name": "[concat(parameters('sqlServerName'), '-Catalog')]",
          "location": "[parameters('resourceLocation')]",
          "sku": {
            "name": "Standard",
            "tier": "Standard"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', concat(parameters('sqlServerName')))]"
          ]
        },
        {
          "type": "databases",
          "apiVersion": "2020-08-01-preview",
          "name": "[concat(parameters('sqlServerName'), '-Identity')]",
          "location": "[parameters('resourceLocation')]",
          "sku": {
            "name": "Standard",
            "tier": "Standard"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', concat(parameters('sqlServerName')))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "location": "[parameters('resourceLocation')]",
      "name": "[parameters('appServicePlanName')]",
      "sku": {
        "name": "[parameters('sku')]"
      }
     },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "properties": {
        "siteConfig": {
          "connectionStrings": [
            {
              "name":"CatalogConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:',reference(parameters('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',concat(parameters('sqlServerName'), '-Catalog'),';Persist Security Info=False;User ID=',reference(parameters('sqlServerName')).administratorLogin,';Password=',parameters('sqlServerAdministratorPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            {
              "name":"IdentityConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:',reference(parameters('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',concat(parameters('sqlServerName'), '-Identity'),';Persist Security Info=False;User ID=',reference(parameters('sqlServerName')).administratorLogin,';Password=',parameters('sqlServerAdministratorPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            }
          ],
          "appSettings": [
            {
              "name": "webBase",
              "value": ""
            }
          ]
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('apiAppName')]",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "properties": {
        "siteConfig": {
          "connectionStrings": [
            {
              "name":"CatalogConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:',reference(parameters('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',concat(parameters('sqlServerName'), '-Catalog'),';Persist Security Info=False;User ID=',reference(parameters('sqlServerName')).administratorLogin,';Password=',parameters('sqlServerAdministratorPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            },
            {
              "name":"IdentityConnection",
              "type": "SQLAzure",
              "connectionString": "[concat('Server=tcp:',reference(parameters('sqlServerName')).fullyQualifiedDomainName,',1433;Initial Catalog=',concat(parameters('sqlServerName'), '-Identity'),';Persist Security Info=False;User ID=',reference(parameters('sqlServerName')).administratorLogin,';Password=',parameters('sqlServerAdministratorPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            }
          ],
          "appSettings": [
            {
              "name": "webBase1",
              "value": ""
            },
            {
              "name": "webBase2",
              "value": ""
            }
          ]
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      }
     },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName_var')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[variables('databaseAccountName_var')]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "enableFreeTier": true,
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('resourceLocation')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
      "name": "[concat(variables('databaseAccountName_var'), '/sql/', parameters('databaseName'))]",
      "apiVersion": "2016-03-31",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('databaseAccountName_var'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('databaseName')]"
        },
        "options": {
          "throughput": 400
        }
      }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
      "name": "[concat(variables('databaseAccountName_var'), '/sql/', parameters('databaseName'), '/', parameters('containers')[copyIndex()].name)]",
      "copy": {
        "name": "ContainerCopy",
        "count": "[length(parameters('containers'))]"
      },
      "apiVersion": "2016-03-31",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('databaseAccountName_var'), 'sql', parameters('databaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('containers')[copyIndex()].name]",
          "partitionKey": {
            "paths": ["[parameters('containers')[copyIndex()].partitionKey]"],
            "kind": "hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent"
          }
        }
      }
    },    
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[parameters('functionAppServicePlanName')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[parameters('functionAppServicePlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('stockFunctionAppName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName_var'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName_var'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName_var')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName_var'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName_var')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('deliveryFunctionAppName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName_var'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "CosmosDbConnectionString",
              "value": "[concat('AccountEndpoint=https://', variables('databaseAccountName_var'),'.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databaseAccountName_var')), '2019-08-01').primaryMasterKey, ';')]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            }
          ]
        }
      }
    }
  ]

}